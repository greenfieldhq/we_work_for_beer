upstream phoenix_wework_for_beer {
  server 127.0.0.1:4000;
}

# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
#
server {
  listen [::]:80;
  listen 80;

  # listen on both hosts
  server_name weworkfor.beer www.weworkfor.beer;

  # and redirect to the https host (declared below)
  # avoiding http://www -> https://www -> https:// chain.
  return 301 https://weworkfor.beer$request_uri;
}

server {
  listen [::]:443 ssl spdy;
  listen 443 ssl spdy;

  # listen on the wrong host
  server_name www.weworkfor.beer.com;

  ssl_certificate     /home/ubuntu/Source/we_work_for_beer/config/ssl/weworkfor_beer_bundle.crt;
  ssl_certificate_key /home/ubuntu/Source/we_work_for_beer/config/ssl/weworkfor_beer.key;
  include /etc/nginx/directive-only/ssl.conf;
  include /etc/nginx/directive-only/ssl-stapling.conf;

  # and redirect to the non-www host (declared below)
  return 301 https://weworkfor.beer$request_uri;
}

server {
  listen [::]:443 ssl spdy;
  listen 443 ssl spdy;

  # The host name to respond to
  server_name weworkfor.beer;

  ssl_certificate     /home/ubuntu/Source/we_work_for_beer/config/ssl/weworkfor_beer_bundle.crt;
  ssl_certificate_key /home/ubuntu/Source/we_work_for_beer/config/ssl/weworkfor_beer.key;
  include /etc/nginx/directive-only/ssl.conf;
  include /etc/nginx/directive-only/ssl-stapling.conf;

  include /etc/nginx/basic.conf;
  include /etc/nginx/directive-only/extra-security.conf;
  include /etc/nginx/directive-only/spdy.conf;

  # Path for static files
  root  /home/ubuntu/Source/we_work_for_beer/frontend/dist;

  #Specify a charset
  charset utf-8;

  access_log /home/ubuntu/Source/log/access.log;
  error_log  /home/ubuntu/Source/log/error.log;

  location @phoenix_wework_for_beer {
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header Host              $http_host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-NginX-Proxy     true;
    proxy_redirect   off;

    proxy_pass http://phoenix_wework_for_beer;
  }

  # These location prefix matches proxy to Rails.
  # They use the ^~ modifier in order to allow sidekiq to serve
  # the CSS/JS for the web UI.
  location ^~ /api/v1 {
    try_files $uri @phoenix_wework_for_beer;
  }

  location ~* \index.html$ {
    expires -1;
  }

  location / {
    expires -1;
    try_files $uri $uri/ /index.html =404;
  }

  client_max_body_size 100m; # max of 100mb uploads
}
